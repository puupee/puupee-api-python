# coding: utf-8

"""
    Puupee API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class ExtensionPropertyUiDto(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def onTable() -> typing.Type['ExtensionPropertyUiTableDto']:
                return ExtensionPropertyUiTableDto
        
            @staticmethod
            def onCreateForm() -> typing.Type['ExtensionPropertyUiFormDto']:
                return ExtensionPropertyUiFormDto
        
            @staticmethod
            def onEditForm() -> typing.Type['ExtensionPropertyUiFormDto']:
                return ExtensionPropertyUiFormDto
        
            @staticmethod
            def lookup() -> typing.Type['ExtensionPropertyUiLookupDto']:
                return ExtensionPropertyUiLookupDto
            __annotations__ = {
                "onTable": onTable,
                "onCreateForm": onCreateForm,
                "onEditForm": onEditForm,
                "lookup": lookup,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["onTable"]) -> 'ExtensionPropertyUiTableDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["onCreateForm"]) -> 'ExtensionPropertyUiFormDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["onEditForm"]) -> 'ExtensionPropertyUiFormDto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lookup"]) -> 'ExtensionPropertyUiLookupDto': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["onTable", "onCreateForm", "onEditForm", "lookup", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["onTable"]) -> typing.Union['ExtensionPropertyUiTableDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["onCreateForm"]) -> typing.Union['ExtensionPropertyUiFormDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["onEditForm"]) -> typing.Union['ExtensionPropertyUiFormDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lookup"]) -> typing.Union['ExtensionPropertyUiLookupDto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["onTable", "onCreateForm", "onEditForm", "lookup", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        onTable: typing.Union['ExtensionPropertyUiTableDto', schemas.Unset] = schemas.unset,
        onCreateForm: typing.Union['ExtensionPropertyUiFormDto', schemas.Unset] = schemas.unset,
        onEditForm: typing.Union['ExtensionPropertyUiFormDto', schemas.Unset] = schemas.unset,
        lookup: typing.Union['ExtensionPropertyUiLookupDto', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ExtensionPropertyUiDto':
        return super().__new__(
            cls,
            *args,
            onTable=onTable,
            onCreateForm=onCreateForm,
            onEditForm=onEditForm,
            lookup=lookup,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.extension_property_ui_form_dto import ExtensionPropertyUiFormDto
from openapi_client.model.extension_property_ui_lookup_dto import ExtensionPropertyUiLookupDto
from openapi_client.model.extension_property_ui_table_dto import ExtensionPropertyUiTableDto
