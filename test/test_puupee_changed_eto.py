# coding: utf-8

"""
    Puupee API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import puupee-api
from puupee-api.models.puupee_changed_eto import PuupeeChangedEto  # noqa: E501
from puupee-api.rest import ApiException

class TestPuupeeChangedEto(unittest.TestCase):
    """PuupeeChangedEto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PuupeeChangedEto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = puupee-api.models.puupee_changed_eto.PuupeeChangedEto()  # noqa: E501
        if include_optional :
            return PuupeeChangedEto(
                data = puupee-api.models.puupee_dto.PuupeeDto(
                    id = '', 
                    creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    creator_id = '', 
                    last_modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_modifier_id = '', 
                    is_deleted = True, 
                    deleter_id = '', 
                    deletion_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    title = '', 
                    description = '', 
                    text = '', 
                    content = '', 
                    format = '', 
                    password = '', 
                    parent_id = '', 
                    key = '', 
                    url = '', 
                    size = 56, 
                    md5 = '', 
                    slice_md5 = '', 
                    rapid_code = '', 
                    content_type = '', 
                    type = '', 
                    display_style = '', 
                    extension = '', 
                    storage_class = '', 
                    storage_object_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    storage_object_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    storage_object_id = '', 
                    storage_object = puupee-api.models.storage_object_dto.StorageObjectDto(
                        id = '', 
                        creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        creator_id = '', 
                        last_modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modifier_id = '', 
                        is_deleted = True, 
                        deleter_id = '', 
                        deletion_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        key = '', 
                        url = '', 
                        size = 56, 
                        md5 = '', 
                        slice_md5 = '', 
                        rapid_code = '', 
                        content_type = '', 
                        extension = '', 
                        storage_class = '', 
                        storage_object_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        storage_object_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        sync_version = 56, 
                        password = '', ), 
                    thumb = puupee-api.models.storage_object_dto.StorageObjectDto(
                        id = '', 
                        creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        creator_id = '', 
                        last_modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modifier_id = '', 
                        is_deleted = True, 
                        deleter_id = '', 
                        deletion_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        key = '', 
                        url = '', 
                        size = 56, 
                        md5 = '', 
                        slice_md5 = '', 
                        rapid_code = '', 
                        content_type = '', 
                        extension = '', 
                        storage_class = '', 
                        storage_object_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        storage_object_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        sync_version = 56, 
                        password = '', ), 
                    priority = 56, 
                    done_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_done = True, 
                    start_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    notify_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    notify_timing_type = '', 
                    notify_timing_unit = '', 
                    notify_timing_value = 56, 
                    repeat = '', 
                    repeat_off_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    repeat_off_times = 56, 
                    repetitions = 56, 
                    sync_version = 56, 
                    is_hidden = True, 
                    tagging = '', 
                    last_modifier_device_token = '', 
                    last_modifier_device = '', 
                    app_name = '', 
                    sort_index = 56, ), 
                user_id = ''
            )
        else :
            return PuupeeChangedEto(
        )

    def testPuupeeChangedEto(self):
        """Test PuupeeChangedEto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
