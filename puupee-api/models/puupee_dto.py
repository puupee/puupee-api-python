# coding: utf-8

"""
    Puupee API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from puupee-api.configuration import Configuration


class PuupeeDto(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'creation_time': 'datetime',
        'creator_id': 'str',
        'last_modification_time': 'datetime',
        'last_modifier_id': 'str',
        'is_deleted': 'bool',
        'deleter_id': 'str',
        'deletion_time': 'datetime',
        'name': 'str',
        'title': 'str',
        'description': 'str',
        'text': 'str',
        'content': 'str',
        'format': 'str',
        'password': 'str',
        'parent_id': 'str',
        'key': 'str',
        'url': 'str',
        'size': 'int',
        'md5': 'str',
        'slice_md5': 'str',
        'rapid_code': 'str',
        'content_type': 'str',
        'type': 'str',
        'display_style': 'str',
        'extension': 'str',
        'storage_class': 'str',
        'storage_object_created_at': 'datetime',
        'storage_object_updated_at': 'datetime',
        'storage_object_id': 'str',
        'storage_object': 'StorageObjectDto',
        'thumb': 'StorageObjectDto',
        'priority': 'int',
        'done_at': 'datetime',
        'is_done': 'bool',
        'start_at': 'datetime',
        'end_at': 'datetime',
        'notify_at': 'datetime',
        'notify_timing_type': 'str',
        'notify_timing_unit': 'str',
        'notify_timing_value': 'int',
        'repeat': 'str',
        'repeat_off_at': 'datetime',
        'repeat_off_times': 'int',
        'repetitions': 'int',
        'sync_version': 'int',
        'is_hidden': 'bool',
        'tagging': 'str',
        'last_modifier_device_token': 'str',
        'last_modifier_device': 'str',
        'app_name': 'str',
        'sort_index': 'int'
    }

    attribute_map = {
        'id': 'id',
        'creation_time': 'creationTime',
        'creator_id': 'creatorId',
        'last_modification_time': 'lastModificationTime',
        'last_modifier_id': 'lastModifierId',
        'is_deleted': 'isDeleted',
        'deleter_id': 'deleterId',
        'deletion_time': 'deletionTime',
        'name': 'name',
        'title': 'title',
        'description': 'description',
        'text': 'text',
        'content': 'content',
        'format': 'format',
        'password': 'password',
        'parent_id': 'parentId',
        'key': 'key',
        'url': 'url',
        'size': 'size',
        'md5': 'md5',
        'slice_md5': 'sliceMd5',
        'rapid_code': 'rapidCode',
        'content_type': 'contentType',
        'type': 'type',
        'display_style': 'displayStyle',
        'extension': 'extension',
        'storage_class': 'storageClass',
        'storage_object_created_at': 'storageObjectCreatedAt',
        'storage_object_updated_at': 'storageObjectUpdatedAt',
        'storage_object_id': 'storageObjectId',
        'storage_object': 'storageObject',
        'thumb': 'thumb',
        'priority': 'priority',
        'done_at': 'doneAt',
        'is_done': 'isDone',
        'start_at': 'startAt',
        'end_at': 'endAt',
        'notify_at': 'notifyAt',
        'notify_timing_type': 'notifyTimingType',
        'notify_timing_unit': 'notifyTimingUnit',
        'notify_timing_value': 'notifyTimingValue',
        'repeat': 'repeat',
        'repeat_off_at': 'repeatOffAt',
        'repeat_off_times': 'repeatOffTimes',
        'repetitions': 'repetitions',
        'sync_version': 'syncVersion',
        'is_hidden': 'isHidden',
        'tagging': 'tagging',
        'last_modifier_device_token': 'lastModifierDeviceToken',
        'last_modifier_device': 'lastModifierDevice',
        'app_name': 'appName',
        'sort_index': 'sortIndex'
    }

    def __init__(self, id=None, creation_time=None, creator_id=None, last_modification_time=None, last_modifier_id=None, is_deleted=None, deleter_id=None, deletion_time=None, name=None, title=None, description=None, text=None, content=None, format=None, password=None, parent_id=None, key=None, url=None, size=None, md5=None, slice_md5=None, rapid_code=None, content_type=None, type=None, display_style=None, extension=None, storage_class=None, storage_object_created_at=None, storage_object_updated_at=None, storage_object_id=None, storage_object=None, thumb=None, priority=None, done_at=None, is_done=None, start_at=None, end_at=None, notify_at=None, notify_timing_type=None, notify_timing_unit=None, notify_timing_value=None, repeat=None, repeat_off_at=None, repeat_off_times=None, repetitions=None, sync_version=None, is_hidden=None, tagging=None, last_modifier_device_token=None, last_modifier_device=None, app_name=None, sort_index=None, local_vars_configuration=None):  # noqa: E501
        """PuupeeDto - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._creation_time = None
        self._creator_id = None
        self._last_modification_time = None
        self._last_modifier_id = None
        self._is_deleted = None
        self._deleter_id = None
        self._deletion_time = None
        self._name = None
        self._title = None
        self._description = None
        self._text = None
        self._content = None
        self._format = None
        self._password = None
        self._parent_id = None
        self._key = None
        self._url = None
        self._size = None
        self._md5 = None
        self._slice_md5 = None
        self._rapid_code = None
        self._content_type = None
        self._type = None
        self._display_style = None
        self._extension = None
        self._storage_class = None
        self._storage_object_created_at = None
        self._storage_object_updated_at = None
        self._storage_object_id = None
        self._storage_object = None
        self._thumb = None
        self._priority = None
        self._done_at = None
        self._is_done = None
        self._start_at = None
        self._end_at = None
        self._notify_at = None
        self._notify_timing_type = None
        self._notify_timing_unit = None
        self._notify_timing_value = None
        self._repeat = None
        self._repeat_off_at = None
        self._repeat_off_times = None
        self._repetitions = None
        self._sync_version = None
        self._is_hidden = None
        self._tagging = None
        self._last_modifier_device_token = None
        self._last_modifier_device = None
        self._app_name = None
        self._sort_index = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if creation_time is not None:
            self.creation_time = creation_time
        self.creator_id = creator_id
        self.last_modification_time = last_modification_time
        self.last_modifier_id = last_modifier_id
        if is_deleted is not None:
            self.is_deleted = is_deleted
        self.deleter_id = deleter_id
        self.deletion_time = deletion_time
        self.name = name
        self.title = title
        self.description = description
        self.text = text
        self.content = content
        self.format = format
        self.password = password
        self.parent_id = parent_id
        self.key = key
        self.url = url
        if size is not None:
            self.size = size
        self.md5 = md5
        self.slice_md5 = slice_md5
        self.rapid_code = rapid_code
        self.content_type = content_type
        self.type = type
        self.display_style = display_style
        self.extension = extension
        self.storage_class = storage_class
        self.storage_object_created_at = storage_object_created_at
        self.storage_object_updated_at = storage_object_updated_at
        self.storage_object_id = storage_object_id
        if storage_object is not None:
            self.storage_object = storage_object
        if thumb is not None:
            self.thumb = thumb
        self.priority = priority
        self.done_at = done_at
        if is_done is not None:
            self.is_done = is_done
        self.start_at = start_at
        self.end_at = end_at
        self.notify_at = notify_at
        self.notify_timing_type = notify_timing_type
        self.notify_timing_unit = notify_timing_unit
        self.notify_timing_value = notify_timing_value
        self.repeat = repeat
        self.repeat_off_at = repeat_off_at
        self.repeat_off_times = repeat_off_times
        self.repetitions = repetitions
        if sync_version is not None:
            self.sync_version = sync_version
        if is_hidden is not None:
            self.is_hidden = is_hidden
        self.tagging = tagging
        self.last_modifier_device_token = last_modifier_device_token
        self.last_modifier_device = last_modifier_device
        self.app_name = app_name
        if sort_index is not None:
            self.sort_index = sort_index

    @property
    def id(self):
        """Gets the id of this PuupeeDto.  # noqa: E501


        :return: The id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PuupeeDto.


        :param id: The id of this PuupeeDto.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def creation_time(self):
        """Gets the creation_time of this PuupeeDto.  # noqa: E501


        :return: The creation_time of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this PuupeeDto.


        :param creation_time: The creation_time of this PuupeeDto.  # noqa: E501
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def creator_id(self):
        """Gets the creator_id of this PuupeeDto.  # noqa: E501


        :return: The creator_id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this PuupeeDto.


        :param creator_id: The creator_id of this PuupeeDto.  # noqa: E501
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this PuupeeDto.  # noqa: E501


        :return: The last_modification_time of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this PuupeeDto.


        :param last_modification_time: The last_modification_time of this PuupeeDto.  # noqa: E501
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time

    @property
    def last_modifier_id(self):
        """Gets the last_modifier_id of this PuupeeDto.  # noqa: E501


        :return: The last_modifier_id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._last_modifier_id

    @last_modifier_id.setter
    def last_modifier_id(self, last_modifier_id):
        """Sets the last_modifier_id of this PuupeeDto.


        :param last_modifier_id: The last_modifier_id of this PuupeeDto.  # noqa: E501
        :type last_modifier_id: str
        """

        self._last_modifier_id = last_modifier_id

    @property
    def is_deleted(self):
        """Gets the is_deleted of this PuupeeDto.  # noqa: E501


        :return: The is_deleted of this PuupeeDto.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this PuupeeDto.


        :param is_deleted: The is_deleted of this PuupeeDto.  # noqa: E501
        :type is_deleted: bool
        """

        self._is_deleted = is_deleted

    @property
    def deleter_id(self):
        """Gets the deleter_id of this PuupeeDto.  # noqa: E501


        :return: The deleter_id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._deleter_id

    @deleter_id.setter
    def deleter_id(self, deleter_id):
        """Sets the deleter_id of this PuupeeDto.


        :param deleter_id: The deleter_id of this PuupeeDto.  # noqa: E501
        :type deleter_id: str
        """

        self._deleter_id = deleter_id

    @property
    def deletion_time(self):
        """Gets the deletion_time of this PuupeeDto.  # noqa: E501


        :return: The deletion_time of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._deletion_time

    @deletion_time.setter
    def deletion_time(self, deletion_time):
        """Sets the deletion_time of this PuupeeDto.


        :param deletion_time: The deletion_time of this PuupeeDto.  # noqa: E501
        :type deletion_time: datetime
        """

        self._deletion_time = deletion_time

    @property
    def name(self):
        """Gets the name of this PuupeeDto.  # noqa: E501


        :return: The name of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PuupeeDto.


        :param name: The name of this PuupeeDto.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def title(self):
        """Gets the title of this PuupeeDto.  # noqa: E501


        :return: The title of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PuupeeDto.


        :param title: The title of this PuupeeDto.  # noqa: E501
        :type title: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this PuupeeDto.  # noqa: E501


        :return: The description of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PuupeeDto.


        :param description: The description of this PuupeeDto.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def text(self):
        """Gets the text of this PuupeeDto.  # noqa: E501


        :return: The text of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this PuupeeDto.


        :param text: The text of this PuupeeDto.  # noqa: E501
        :type text: str
        """

        self._text = text

    @property
    def content(self):
        """Gets the content of this PuupeeDto.  # noqa: E501


        :return: The content of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this PuupeeDto.


        :param content: The content of this PuupeeDto.  # noqa: E501
        :type content: str
        """

        self._content = content

    @property
    def format(self):
        """Gets the format of this PuupeeDto.  # noqa: E501


        :return: The format of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PuupeeDto.


        :param format: The format of this PuupeeDto.  # noqa: E501
        :type format: str
        """

        self._format = format

    @property
    def password(self):
        """Gets the password of this PuupeeDto.  # noqa: E501


        :return: The password of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this PuupeeDto.


        :param password: The password of this PuupeeDto.  # noqa: E501
        :type password: str
        """

        self._password = password

    @property
    def parent_id(self):
        """Gets the parent_id of this PuupeeDto.  # noqa: E501


        :return: The parent_id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this PuupeeDto.


        :param parent_id: The parent_id of this PuupeeDto.  # noqa: E501
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def key(self):
        """Gets the key of this PuupeeDto.  # noqa: E501


        :return: The key of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this PuupeeDto.


        :param key: The key of this PuupeeDto.  # noqa: E501
        :type key: str
        """

        self._key = key

    @property
    def url(self):
        """Gets the url of this PuupeeDto.  # noqa: E501


        :return: The url of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PuupeeDto.


        :param url: The url of this PuupeeDto.  # noqa: E501
        :type url: str
        """

        self._url = url

    @property
    def size(self):
        """Gets the size of this PuupeeDto.  # noqa: E501


        :return: The size of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PuupeeDto.


        :param size: The size of this PuupeeDto.  # noqa: E501
        :type size: int
        """

        self._size = size

    @property
    def md5(self):
        """Gets the md5 of this PuupeeDto.  # noqa: E501


        :return: The md5 of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._md5

    @md5.setter
    def md5(self, md5):
        """Sets the md5 of this PuupeeDto.


        :param md5: The md5 of this PuupeeDto.  # noqa: E501
        :type md5: str
        """

        self._md5 = md5

    @property
    def slice_md5(self):
        """Gets the slice_md5 of this PuupeeDto.  # noqa: E501


        :return: The slice_md5 of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._slice_md5

    @slice_md5.setter
    def slice_md5(self, slice_md5):
        """Sets the slice_md5 of this PuupeeDto.


        :param slice_md5: The slice_md5 of this PuupeeDto.  # noqa: E501
        :type slice_md5: str
        """

        self._slice_md5 = slice_md5

    @property
    def rapid_code(self):
        """Gets the rapid_code of this PuupeeDto.  # noqa: E501


        :return: The rapid_code of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._rapid_code

    @rapid_code.setter
    def rapid_code(self, rapid_code):
        """Sets the rapid_code of this PuupeeDto.


        :param rapid_code: The rapid_code of this PuupeeDto.  # noqa: E501
        :type rapid_code: str
        """

        self._rapid_code = rapid_code

    @property
    def content_type(self):
        """Gets the content_type of this PuupeeDto.  # noqa: E501


        :return: The content_type of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this PuupeeDto.


        :param content_type: The content_type of this PuupeeDto.  # noqa: E501
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def type(self):
        """Gets the type of this PuupeeDto.  # noqa: E501


        :return: The type of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PuupeeDto.


        :param type: The type of this PuupeeDto.  # noqa: E501
        :type type: str
        """

        self._type = type

    @property
    def display_style(self):
        """Gets the display_style of this PuupeeDto.  # noqa: E501


        :return: The display_style of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._display_style

    @display_style.setter
    def display_style(self, display_style):
        """Sets the display_style of this PuupeeDto.


        :param display_style: The display_style of this PuupeeDto.  # noqa: E501
        :type display_style: str
        """

        self._display_style = display_style

    @property
    def extension(self):
        """Gets the extension of this PuupeeDto.  # noqa: E501


        :return: The extension of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this PuupeeDto.


        :param extension: The extension of this PuupeeDto.  # noqa: E501
        :type extension: str
        """

        self._extension = extension

    @property
    def storage_class(self):
        """Gets the storage_class of this PuupeeDto.  # noqa: E501


        :return: The storage_class of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._storage_class

    @storage_class.setter
    def storage_class(self, storage_class):
        """Sets the storage_class of this PuupeeDto.


        :param storage_class: The storage_class of this PuupeeDto.  # noqa: E501
        :type storage_class: str
        """

        self._storage_class = storage_class

    @property
    def storage_object_created_at(self):
        """Gets the storage_object_created_at of this PuupeeDto.  # noqa: E501


        :return: The storage_object_created_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._storage_object_created_at

    @storage_object_created_at.setter
    def storage_object_created_at(self, storage_object_created_at):
        """Sets the storage_object_created_at of this PuupeeDto.


        :param storage_object_created_at: The storage_object_created_at of this PuupeeDto.  # noqa: E501
        :type storage_object_created_at: datetime
        """

        self._storage_object_created_at = storage_object_created_at

    @property
    def storage_object_updated_at(self):
        """Gets the storage_object_updated_at of this PuupeeDto.  # noqa: E501


        :return: The storage_object_updated_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._storage_object_updated_at

    @storage_object_updated_at.setter
    def storage_object_updated_at(self, storage_object_updated_at):
        """Sets the storage_object_updated_at of this PuupeeDto.


        :param storage_object_updated_at: The storage_object_updated_at of this PuupeeDto.  # noqa: E501
        :type storage_object_updated_at: datetime
        """

        self._storage_object_updated_at = storage_object_updated_at

    @property
    def storage_object_id(self):
        """Gets the storage_object_id of this PuupeeDto.  # noqa: E501


        :return: The storage_object_id of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._storage_object_id

    @storage_object_id.setter
    def storage_object_id(self, storage_object_id):
        """Sets the storage_object_id of this PuupeeDto.


        :param storage_object_id: The storage_object_id of this PuupeeDto.  # noqa: E501
        :type storage_object_id: str
        """

        self._storage_object_id = storage_object_id

    @property
    def storage_object(self):
        """Gets the storage_object of this PuupeeDto.  # noqa: E501


        :return: The storage_object of this PuupeeDto.  # noqa: E501
        :rtype: StorageObjectDto
        """
        return self._storage_object

    @storage_object.setter
    def storage_object(self, storage_object):
        """Sets the storage_object of this PuupeeDto.


        :param storage_object: The storage_object of this PuupeeDto.  # noqa: E501
        :type storage_object: StorageObjectDto
        """

        self._storage_object = storage_object

    @property
    def thumb(self):
        """Gets the thumb of this PuupeeDto.  # noqa: E501


        :return: The thumb of this PuupeeDto.  # noqa: E501
        :rtype: StorageObjectDto
        """
        return self._thumb

    @thumb.setter
    def thumb(self, thumb):
        """Sets the thumb of this PuupeeDto.


        :param thumb: The thumb of this PuupeeDto.  # noqa: E501
        :type thumb: StorageObjectDto
        """

        self._thumb = thumb

    @property
    def priority(self):
        """Gets the priority of this PuupeeDto.  # noqa: E501


        :return: The priority of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this PuupeeDto.


        :param priority: The priority of this PuupeeDto.  # noqa: E501
        :type priority: int
        """

        self._priority = priority

    @property
    def done_at(self):
        """Gets the done_at of this PuupeeDto.  # noqa: E501


        :return: The done_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._done_at

    @done_at.setter
    def done_at(self, done_at):
        """Sets the done_at of this PuupeeDto.


        :param done_at: The done_at of this PuupeeDto.  # noqa: E501
        :type done_at: datetime
        """

        self._done_at = done_at

    @property
    def is_done(self):
        """Gets the is_done of this PuupeeDto.  # noqa: E501


        :return: The is_done of this PuupeeDto.  # noqa: E501
        :rtype: bool
        """
        return self._is_done

    @is_done.setter
    def is_done(self, is_done):
        """Sets the is_done of this PuupeeDto.


        :param is_done: The is_done of this PuupeeDto.  # noqa: E501
        :type is_done: bool
        """

        self._is_done = is_done

    @property
    def start_at(self):
        """Gets the start_at of this PuupeeDto.  # noqa: E501


        :return: The start_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this PuupeeDto.


        :param start_at: The start_at of this PuupeeDto.  # noqa: E501
        :type start_at: datetime
        """

        self._start_at = start_at

    @property
    def end_at(self):
        """Gets the end_at of this PuupeeDto.  # noqa: E501


        :return: The end_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._end_at

    @end_at.setter
    def end_at(self, end_at):
        """Sets the end_at of this PuupeeDto.


        :param end_at: The end_at of this PuupeeDto.  # noqa: E501
        :type end_at: datetime
        """

        self._end_at = end_at

    @property
    def notify_at(self):
        """Gets the notify_at of this PuupeeDto.  # noqa: E501


        :return: The notify_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._notify_at

    @notify_at.setter
    def notify_at(self, notify_at):
        """Sets the notify_at of this PuupeeDto.


        :param notify_at: The notify_at of this PuupeeDto.  # noqa: E501
        :type notify_at: datetime
        """

        self._notify_at = notify_at

    @property
    def notify_timing_type(self):
        """Gets the notify_timing_type of this PuupeeDto.  # noqa: E501


        :return: The notify_timing_type of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._notify_timing_type

    @notify_timing_type.setter
    def notify_timing_type(self, notify_timing_type):
        """Sets the notify_timing_type of this PuupeeDto.


        :param notify_timing_type: The notify_timing_type of this PuupeeDto.  # noqa: E501
        :type notify_timing_type: str
        """

        self._notify_timing_type = notify_timing_type

    @property
    def notify_timing_unit(self):
        """Gets the notify_timing_unit of this PuupeeDto.  # noqa: E501


        :return: The notify_timing_unit of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._notify_timing_unit

    @notify_timing_unit.setter
    def notify_timing_unit(self, notify_timing_unit):
        """Sets the notify_timing_unit of this PuupeeDto.


        :param notify_timing_unit: The notify_timing_unit of this PuupeeDto.  # noqa: E501
        :type notify_timing_unit: str
        """

        self._notify_timing_unit = notify_timing_unit

    @property
    def notify_timing_value(self):
        """Gets the notify_timing_value of this PuupeeDto.  # noqa: E501


        :return: The notify_timing_value of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._notify_timing_value

    @notify_timing_value.setter
    def notify_timing_value(self, notify_timing_value):
        """Sets the notify_timing_value of this PuupeeDto.


        :param notify_timing_value: The notify_timing_value of this PuupeeDto.  # noqa: E501
        :type notify_timing_value: int
        """

        self._notify_timing_value = notify_timing_value

    @property
    def repeat(self):
        """Gets the repeat of this PuupeeDto.  # noqa: E501


        :return: The repeat of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._repeat

    @repeat.setter
    def repeat(self, repeat):
        """Sets the repeat of this PuupeeDto.


        :param repeat: The repeat of this PuupeeDto.  # noqa: E501
        :type repeat: str
        """

        self._repeat = repeat

    @property
    def repeat_off_at(self):
        """Gets the repeat_off_at of this PuupeeDto.  # noqa: E501


        :return: The repeat_off_at of this PuupeeDto.  # noqa: E501
        :rtype: datetime
        """
        return self._repeat_off_at

    @repeat_off_at.setter
    def repeat_off_at(self, repeat_off_at):
        """Sets the repeat_off_at of this PuupeeDto.


        :param repeat_off_at: The repeat_off_at of this PuupeeDto.  # noqa: E501
        :type repeat_off_at: datetime
        """

        self._repeat_off_at = repeat_off_at

    @property
    def repeat_off_times(self):
        """Gets the repeat_off_times of this PuupeeDto.  # noqa: E501


        :return: The repeat_off_times of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._repeat_off_times

    @repeat_off_times.setter
    def repeat_off_times(self, repeat_off_times):
        """Sets the repeat_off_times of this PuupeeDto.


        :param repeat_off_times: The repeat_off_times of this PuupeeDto.  # noqa: E501
        :type repeat_off_times: int
        """

        self._repeat_off_times = repeat_off_times

    @property
    def repetitions(self):
        """Gets the repetitions of this PuupeeDto.  # noqa: E501


        :return: The repetitions of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._repetitions

    @repetitions.setter
    def repetitions(self, repetitions):
        """Sets the repetitions of this PuupeeDto.


        :param repetitions: The repetitions of this PuupeeDto.  # noqa: E501
        :type repetitions: int
        """

        self._repetitions = repetitions

    @property
    def sync_version(self):
        """Gets the sync_version of this PuupeeDto.  # noqa: E501


        :return: The sync_version of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._sync_version

    @sync_version.setter
    def sync_version(self, sync_version):
        """Sets the sync_version of this PuupeeDto.


        :param sync_version: The sync_version of this PuupeeDto.  # noqa: E501
        :type sync_version: int
        """

        self._sync_version = sync_version

    @property
    def is_hidden(self):
        """Gets the is_hidden of this PuupeeDto.  # noqa: E501


        :return: The is_hidden of this PuupeeDto.  # noqa: E501
        :rtype: bool
        """
        return self._is_hidden

    @is_hidden.setter
    def is_hidden(self, is_hidden):
        """Sets the is_hidden of this PuupeeDto.


        :param is_hidden: The is_hidden of this PuupeeDto.  # noqa: E501
        :type is_hidden: bool
        """

        self._is_hidden = is_hidden

    @property
    def tagging(self):
        """Gets the tagging of this PuupeeDto.  # noqa: E501


        :return: The tagging of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._tagging

    @tagging.setter
    def tagging(self, tagging):
        """Sets the tagging of this PuupeeDto.


        :param tagging: The tagging of this PuupeeDto.  # noqa: E501
        :type tagging: str
        """

        self._tagging = tagging

    @property
    def last_modifier_device_token(self):
        """Gets the last_modifier_device_token of this PuupeeDto.  # noqa: E501


        :return: The last_modifier_device_token of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._last_modifier_device_token

    @last_modifier_device_token.setter
    def last_modifier_device_token(self, last_modifier_device_token):
        """Sets the last_modifier_device_token of this PuupeeDto.


        :param last_modifier_device_token: The last_modifier_device_token of this PuupeeDto.  # noqa: E501
        :type last_modifier_device_token: str
        """

        self._last_modifier_device_token = last_modifier_device_token

    @property
    def last_modifier_device(self):
        """Gets the last_modifier_device of this PuupeeDto.  # noqa: E501


        :return: The last_modifier_device of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._last_modifier_device

    @last_modifier_device.setter
    def last_modifier_device(self, last_modifier_device):
        """Sets the last_modifier_device of this PuupeeDto.


        :param last_modifier_device: The last_modifier_device of this PuupeeDto.  # noqa: E501
        :type last_modifier_device: str
        """

        self._last_modifier_device = last_modifier_device

    @property
    def app_name(self):
        """Gets the app_name of this PuupeeDto.  # noqa: E501


        :return: The app_name of this PuupeeDto.  # noqa: E501
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this PuupeeDto.


        :param app_name: The app_name of this PuupeeDto.  # noqa: E501
        :type app_name: str
        """

        self._app_name = app_name

    @property
    def sort_index(self):
        """Gets the sort_index of this PuupeeDto.  # noqa: E501


        :return: The sort_index of this PuupeeDto.  # noqa: E501
        :rtype: int
        """
        return self._sort_index

    @sort_index.setter
    def sort_index(self, sort_index):
        """Sets the sort_index of this PuupeeDto.


        :param sort_index: The sort_index of this PuupeeDto.  # noqa: E501
        :type sort_index: int
        """

        self._sort_index = sort_index

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PuupeeDto):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PuupeeDto):
            return True

        return self.to_dict() != other.to_dict()
