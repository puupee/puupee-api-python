# coding: utf-8

"""
    Puupee API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from puupee-api.configuration import Configuration


class LatestReceiptInfo(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'quantity': 'str',
        'product_id': 'str',
        'transaction_id': 'str',
        'original_transaction_id': 'str',
        'purchase_date': 'str',
        'purchase_date_ms': 'str',
        'purchase_date_pst': 'str',
        'original_purchase_date': 'str',
        'original_purchase_date_ms': 'str',
        'original_purchase_date_pst': 'str',
        'expires_date': 'str',
        'expires_date_ms': 'str',
        'expires_date_pst': 'str',
        'web_order_line_item_id': 'str',
        'is_trial_period': 'str',
        'is_in_intro_offer_period': 'str'
    }

    attribute_map = {
        'quantity': 'quantity',
        'product_id': 'product_id',
        'transaction_id': 'transaction_id',
        'original_transaction_id': 'original_transaction_id',
        'purchase_date': 'purchase_date',
        'purchase_date_ms': 'purchase_date_ms',
        'purchase_date_pst': 'purchase_date_pst',
        'original_purchase_date': 'original_purchase_date',
        'original_purchase_date_ms': 'original_purchase_date_ms',
        'original_purchase_date_pst': 'original_purchase_date_pst',
        'expires_date': 'expires_date',
        'expires_date_ms': 'expires_date_ms',
        'expires_date_pst': 'expires_date_pst',
        'web_order_line_item_id': 'web_order_line_item_id',
        'is_trial_period': 'is_trial_period',
        'is_in_intro_offer_period': 'is_in_intro_offer_period'
    }

    def __init__(self, quantity=None, product_id=None, transaction_id=None, original_transaction_id=None, purchase_date=None, purchase_date_ms=None, purchase_date_pst=None, original_purchase_date=None, original_purchase_date_ms=None, original_purchase_date_pst=None, expires_date=None, expires_date_ms=None, expires_date_pst=None, web_order_line_item_id=None, is_trial_period=None, is_in_intro_offer_period=None, local_vars_configuration=None):  # noqa: E501
        """LatestReceiptInfo - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._quantity = None
        self._product_id = None
        self._transaction_id = None
        self._original_transaction_id = None
        self._purchase_date = None
        self._purchase_date_ms = None
        self._purchase_date_pst = None
        self._original_purchase_date = None
        self._original_purchase_date_ms = None
        self._original_purchase_date_pst = None
        self._expires_date = None
        self._expires_date_ms = None
        self._expires_date_pst = None
        self._web_order_line_item_id = None
        self._is_trial_period = None
        self._is_in_intro_offer_period = None
        self.discriminator = None

        self.quantity = quantity
        self.product_id = product_id
        self.transaction_id = transaction_id
        self.original_transaction_id = original_transaction_id
        self.purchase_date = purchase_date
        self.purchase_date_ms = purchase_date_ms
        self.purchase_date_pst = purchase_date_pst
        self.original_purchase_date = original_purchase_date
        self.original_purchase_date_ms = original_purchase_date_ms
        self.original_purchase_date_pst = original_purchase_date_pst
        self.expires_date = expires_date
        self.expires_date_ms = expires_date_ms
        self.expires_date_pst = expires_date_pst
        self.web_order_line_item_id = web_order_line_item_id
        self.is_trial_period = is_trial_period
        self.is_in_intro_offer_period = is_in_intro_offer_period

    @property
    def quantity(self):
        """Gets the quantity of this LatestReceiptInfo.  # noqa: E501


        :return: The quantity of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this LatestReceiptInfo.


        :param quantity: The quantity of this LatestReceiptInfo.  # noqa: E501
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def product_id(self):
        """Gets the product_id of this LatestReceiptInfo.  # noqa: E501


        :return: The product_id of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this LatestReceiptInfo.


        :param product_id: The product_id of this LatestReceiptInfo.  # noqa: E501
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def transaction_id(self):
        """Gets the transaction_id of this LatestReceiptInfo.  # noqa: E501


        :return: The transaction_id of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this LatestReceiptInfo.


        :param transaction_id: The transaction_id of this LatestReceiptInfo.  # noqa: E501
        :type transaction_id: str
        """

        self._transaction_id = transaction_id

    @property
    def original_transaction_id(self):
        """Gets the original_transaction_id of this LatestReceiptInfo.  # noqa: E501


        :return: The original_transaction_id of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._original_transaction_id

    @original_transaction_id.setter
    def original_transaction_id(self, original_transaction_id):
        """Sets the original_transaction_id of this LatestReceiptInfo.


        :param original_transaction_id: The original_transaction_id of this LatestReceiptInfo.  # noqa: E501
        :type original_transaction_id: str
        """

        self._original_transaction_id = original_transaction_id

    @property
    def purchase_date(self):
        """Gets the purchase_date of this LatestReceiptInfo.  # noqa: E501


        :return: The purchase_date of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this LatestReceiptInfo.


        :param purchase_date: The purchase_date of this LatestReceiptInfo.  # noqa: E501
        :type purchase_date: str
        """

        self._purchase_date = purchase_date

    @property
    def purchase_date_ms(self):
        """Gets the purchase_date_ms of this LatestReceiptInfo.  # noqa: E501


        :return: The purchase_date_ms of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._purchase_date_ms

    @purchase_date_ms.setter
    def purchase_date_ms(self, purchase_date_ms):
        """Sets the purchase_date_ms of this LatestReceiptInfo.


        :param purchase_date_ms: The purchase_date_ms of this LatestReceiptInfo.  # noqa: E501
        :type purchase_date_ms: str
        """

        self._purchase_date_ms = purchase_date_ms

    @property
    def purchase_date_pst(self):
        """Gets the purchase_date_pst of this LatestReceiptInfo.  # noqa: E501


        :return: The purchase_date_pst of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._purchase_date_pst

    @purchase_date_pst.setter
    def purchase_date_pst(self, purchase_date_pst):
        """Sets the purchase_date_pst of this LatestReceiptInfo.


        :param purchase_date_pst: The purchase_date_pst of this LatestReceiptInfo.  # noqa: E501
        :type purchase_date_pst: str
        """

        self._purchase_date_pst = purchase_date_pst

    @property
    def original_purchase_date(self):
        """Gets the original_purchase_date of this LatestReceiptInfo.  # noqa: E501


        :return: The original_purchase_date of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._original_purchase_date

    @original_purchase_date.setter
    def original_purchase_date(self, original_purchase_date):
        """Sets the original_purchase_date of this LatestReceiptInfo.


        :param original_purchase_date: The original_purchase_date of this LatestReceiptInfo.  # noqa: E501
        :type original_purchase_date: str
        """

        self._original_purchase_date = original_purchase_date

    @property
    def original_purchase_date_ms(self):
        """Gets the original_purchase_date_ms of this LatestReceiptInfo.  # noqa: E501


        :return: The original_purchase_date_ms of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._original_purchase_date_ms

    @original_purchase_date_ms.setter
    def original_purchase_date_ms(self, original_purchase_date_ms):
        """Sets the original_purchase_date_ms of this LatestReceiptInfo.


        :param original_purchase_date_ms: The original_purchase_date_ms of this LatestReceiptInfo.  # noqa: E501
        :type original_purchase_date_ms: str
        """

        self._original_purchase_date_ms = original_purchase_date_ms

    @property
    def original_purchase_date_pst(self):
        """Gets the original_purchase_date_pst of this LatestReceiptInfo.  # noqa: E501


        :return: The original_purchase_date_pst of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._original_purchase_date_pst

    @original_purchase_date_pst.setter
    def original_purchase_date_pst(self, original_purchase_date_pst):
        """Sets the original_purchase_date_pst of this LatestReceiptInfo.


        :param original_purchase_date_pst: The original_purchase_date_pst of this LatestReceiptInfo.  # noqa: E501
        :type original_purchase_date_pst: str
        """

        self._original_purchase_date_pst = original_purchase_date_pst

    @property
    def expires_date(self):
        """Gets the expires_date of this LatestReceiptInfo.  # noqa: E501


        :return: The expires_date of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._expires_date

    @expires_date.setter
    def expires_date(self, expires_date):
        """Sets the expires_date of this LatestReceiptInfo.


        :param expires_date: The expires_date of this LatestReceiptInfo.  # noqa: E501
        :type expires_date: str
        """

        self._expires_date = expires_date

    @property
    def expires_date_ms(self):
        """Gets the expires_date_ms of this LatestReceiptInfo.  # noqa: E501


        :return: The expires_date_ms of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._expires_date_ms

    @expires_date_ms.setter
    def expires_date_ms(self, expires_date_ms):
        """Sets the expires_date_ms of this LatestReceiptInfo.


        :param expires_date_ms: The expires_date_ms of this LatestReceiptInfo.  # noqa: E501
        :type expires_date_ms: str
        """

        self._expires_date_ms = expires_date_ms

    @property
    def expires_date_pst(self):
        """Gets the expires_date_pst of this LatestReceiptInfo.  # noqa: E501


        :return: The expires_date_pst of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._expires_date_pst

    @expires_date_pst.setter
    def expires_date_pst(self, expires_date_pst):
        """Sets the expires_date_pst of this LatestReceiptInfo.


        :param expires_date_pst: The expires_date_pst of this LatestReceiptInfo.  # noqa: E501
        :type expires_date_pst: str
        """

        self._expires_date_pst = expires_date_pst

    @property
    def web_order_line_item_id(self):
        """Gets the web_order_line_item_id of this LatestReceiptInfo.  # noqa: E501


        :return: The web_order_line_item_id of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._web_order_line_item_id

    @web_order_line_item_id.setter
    def web_order_line_item_id(self, web_order_line_item_id):
        """Sets the web_order_line_item_id of this LatestReceiptInfo.


        :param web_order_line_item_id: The web_order_line_item_id of this LatestReceiptInfo.  # noqa: E501
        :type web_order_line_item_id: str
        """

        self._web_order_line_item_id = web_order_line_item_id

    @property
    def is_trial_period(self):
        """Gets the is_trial_period of this LatestReceiptInfo.  # noqa: E501


        :return: The is_trial_period of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._is_trial_period

    @is_trial_period.setter
    def is_trial_period(self, is_trial_period):
        """Sets the is_trial_period of this LatestReceiptInfo.


        :param is_trial_period: The is_trial_period of this LatestReceiptInfo.  # noqa: E501
        :type is_trial_period: str
        """

        self._is_trial_period = is_trial_period

    @property
    def is_in_intro_offer_period(self):
        """Gets the is_in_intro_offer_period of this LatestReceiptInfo.  # noqa: E501


        :return: The is_in_intro_offer_period of this LatestReceiptInfo.  # noqa: E501
        :rtype: str
        """
        return self._is_in_intro_offer_period

    @is_in_intro_offer_period.setter
    def is_in_intro_offer_period(self, is_in_intro_offer_period):
        """Sets the is_in_intro_offer_period of this LatestReceiptInfo.


        :param is_in_intro_offer_period: The is_in_intro_offer_period of this LatestReceiptInfo.  # noqa: E501
        :type is_in_intro_offer_period: str
        """

        self._is_in_intro_offer_period = is_in_intro_offer_period

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LatestReceiptInfo):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LatestReceiptInfo):
            return True

        return self.to_dict() != other.to_dict()
